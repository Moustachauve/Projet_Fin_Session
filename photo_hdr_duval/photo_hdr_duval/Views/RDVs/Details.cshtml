@model photo_hdr_duval.Models.RDV

@{
    ViewBag.Title = "Details";
}
<h2>Rendez-vous avec @Html.DisplayFor(model => model.NomProprietaire), @Html.DisplayFor(model => model.PrenomProprietaire) <div class="pull-right">@Html.Partial("RDVStatut", Model.Statuts.First())</div></h2>
@if (Model.DateRDV != null)
{
    <h4>@Html.DisplayFor(model => model.DateRDV) à @Html.DisplayFor(model => model.HeureRDV) </h4>
}
<hr />

<div>
    <h3>Informations de contact:</h3>
    <dl>

        <dt>
            @Html.DisplayNameFor(model => model.EmailProprietaire)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EmailProprietaire)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TelPrincipalProprietaire)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TelPrincipalProprietaire)
        </dd>

        @if (Model.TelSecondaire != null)
        {
            <dt>
                @Html.DisplayNameFor(model => model.TelSecondaire)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TelSecondaire)
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.AdressePropriete)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AdressePropriete)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CodePostal)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CodePostal)
        </dd>

        @if (Model.Commentaire != null && !String.IsNullOrWhiteSpace(Model.Commentaire))
        {
            <dt>
                @Html.DisplayNameFor(model => model.Commentaire)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Commentaire)
            </dd>
        }

        <dt>
            @Html.DisplayNameFor(model => model.Forfait.Prix)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Forfait.Prix)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Deplacement)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Deplacement)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.VisiteVirtuelle)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.VisiteVirtuelle)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CoutTotalAvantTaxes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CoutTotalAvantTaxes)
        </dd>

        @if (ViewBag.Taxes != null)
        {
            foreach (photo_hdr_duval.Models.Tax item in ViewBag.Taxes)
            {
                <dt>
                    @item.Nom (@item.PourcentageToString()) :
                </dt>
                <dd>
                    @{switch (item.Nom)
                    {
                        case "TPS":
                            @ViewBag.TPS
                            break;
                        case "TVQ":
                            @ViewBag.TVQ
                            break;
                    }
                    }
                </dd>
            }
        }

        <dt>
            @Html.DisplayNameFor(model => model.CoutTotalApresTaxes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CoutTotalApresTaxes)
        </dd>
    </dl>
</div>

<div class="row" id="photo_gallery">
    <h2>Photos: @Html.ActionLink("Ajouter des photos", "UploadPhoto", "RDVs", new { id = Model.RDVID }, new { @class = "btn btn-success pull-right" })</h2>
    @foreach (photo_hdr_duval.Models.PhotoPropriete photo in Model.PhotoProprietes)
    {
        string chemin = @Url.Content(photo.Url);

        <div class="col-xs-6 col-sm-4 col-md-3 thumbnail-container" id="@photo.PhotoProprieteID">
            <div class="buttons">
                @Html.ActionLink(" ", "DownloadPhoto", "PhotoProprietes", new { id = photo.PhotoProprieteID }, new { @class = "glyphicon glyphicon-save", title = "Télécharger la photo" }) @*Télécharger*@
                @Html.ActionLink(" ", "EditPhoto", "PhotoProprietes", new { id = photo.PhotoProprieteID }, new { @class = "glyphicon glyphicon-pencil", title = "Modifier la photo" }) @*Modifier*@
                <a href="#" class="glyphicon glyphicon-remove delete_image"></a>
            </div>
            <a class="thumbnail" data-footer="@photo.DescriptionPhoto" data-toggle="lightbox" href="@chemin" data-gallery="photos">
                <img src="@chemin" alt="@photo.DescriptionPhoto" class="img-responsive" />
            </a>
        </div>
    }
</div>
<hr />
<div class="btn-group">
    @Html.ActionLink("Modifier", "Edit", new { id = Model.RDVID }, new { @class = "btn btn-primary" })
    @Html.ActionLink("Retourner à la liste", "Index", null, new { @class = "btn btn-default" })
</div>


@section Scripts {

    @Scripts.Render("~/Scripts/ekko-lightbox.js")
    @Scripts.Render("~/Scripts/jquery.matchHeight-min.js")
    @Scripts.Render("~/Scripts/jquery.image-buttons.js")
}
